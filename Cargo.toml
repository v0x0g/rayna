# ===== WORKSPACE =====

[workspace]
resolver = "2"
members = [
    "rayna_engine",
    "rayna_ui",
]


# ===== SHARED DEPENDENCIES =====


[workspace.dependencies]

# UI
egui = { version = "0.27.2", features = ["puffin", "mint", "default_fonts", "bytemuck", "callstack", "cint", "color-hex", "persistence", "ron"] }
enum2egui = "0.2.0"

# Maths

glam = { version = "0.27.0", features = ["approx", "mint", "rand", "serde", "debug-glam-assert", "std"] }
glamour = { version = "0.11.1", features = ["serde", "mint"] }
num-traits = "0.2.17"
num-integer = "0.1.45"
mint = "0.5.9"
rand = { version = "0.8.5", features = ["min_const_gen", "small_rng"] }
rand_core = "0.6.4"
rand_chacha = "0.3.1"
rand_pcg = "0.3.1"
rand_xorshift = "0.3.0"
rand_hc = "0.3.2"
rand_isaac = "0.3.0"
ndarray = { version = "0.15.6", features = ["rayon"] }
noise = { version = "0.9.0", features = ["images"] }

# Errors

anyhow = "1.0.75"
thiserror = "1.0.50"

# I love logging

tracing = { version = "0.1.40", features = ["valuable"] }
tracing-serde = { version = "0.1.3", features = [] }
serde = { version = "1.0.193", features = ["derive"] }
valuable = { version = "0.1.0", features = ["derive"] }

# Other

nonzero = "0.2.0"
cfg-if = "1.0.0"
itertools = "0.12.0"
derivative = "2.2.0"
memoize = "0.4.2"
approx = "0.5.1"
enum2str = "0.1.10"
strum = "0.26.2"
strum_macros = "0.26.2"
static_init = "1.0.3"
getset = "0.1.2"
auto_ops = "0.3.0"
once_cell = "1.19.0"
paste = "1.0.14"
static_assertions = "1.1.0"

# Performance
opool = "0.1.1" # PATCHED
puffin = "0.19.0" # PATCHED
puffin_http = "0.16.0" # PATCHED
rayon = "1.8.0"


# ===== PATCHED DEPENDENCIES =====


[patch.crates-io]
# Using a custom fork of `puffin`
# - So we can have multiple instances of the `puffin_http::Server` that are disjoint
# - So that we can use a `profile_scope_custom!()` macro
puffin = { git = "ssh://git@github.com/v0x0g/fork-puffin.git", branch = "main" }
puffin_http = { git = "ssh://git@github.com/v0x0g/fork-puffin.git", branch = "main" }
# Custom features from fork, removed type bounds
opool = { git = "ssh://git@github.com/v0x0g/fork-opool.git", branch = "main" }
# Latest version on <crates.io> is `0.14.0`, which is over a year old and uses incompatible version of egui
# Github is more up-to-date
egui_miniquad = { git = "ssh://git@github.com/not-fl3/egui-miniquad.git", branch = "master", package = "egui-miniquad" }


# ===== BUILD PROFILES =====


# Default dev profile, fast compile times
[profile.dev]
debug = "full"
lto = "off"
incremental = true
debug-assertions = true
opt-level = 1
codegen-units = 128
[profile.dev.package."*"]
opt-level = 3

# Only useful for debugging, very slow
[profile.dbg]
inherits = "dev"
debug = "full"
opt-level = 0
# Provide minor optimisations to dependencies
[profile.dbg.package."*"]
opt-level = 1
codegen-units = 32

# Zoomies in release, but extremely slow to compile
[profile.release]
debug = "full"
lto = "fat"
opt-level = 3
codegen-units = 1